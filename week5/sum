#include <iostream>
using namespace std;

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;

    int L[n1], R[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        merge(arr, left, mid, right);
    }
}

bool hasPairWithSum(int arr[], int size, int key) {
    // Sort the array using merge sort
    mergeSort(arr, 0, size - 1);

    // Initialize two pointers, one pointing to the beginning and one to the end of the array
    int left = 0;
    int right = size - 1;

    // Traverse the array while the pointers don't meet
    while (left < right) {
        int currentSum = arr[left] + arr[right];

        // If the current sum is equal to the key, return true
        if (currentSum == key) {
            return true;
        }
        // If the current sum is less than the key, move the left pointer to the right
        else if (currentSum < key) {
            left++;
        }
        // If the current sum is greater than the key, move the right pointer to the left
        else {
            right--;
        }
    }

    // If no pair with the given sum is found, return false
    return false;
}

int main() {
   int t;
    cout<<"Enter the number of test cases";
    cin>>t;
    while(t){
        cout<< "Enter the size";
        int size;
        cin>>size;
        int arr[size];
        int key;
        cout<<"Enter the Elements";
        for(int i =0; i<size; i++){
            cin>>arr[i];
        }
        cout<<"enter the Key";
        cin>>key;
        if (hasPairWithSum(arr, size, key)) {
            cout << "Array contains two elements with sum " << key << std::endl;
        } else {
            cout << "Array does not contain two elements with sum " << key << std::endl;
        }
        t--;
    }
    return 0;
}
